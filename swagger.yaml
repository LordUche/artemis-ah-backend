swagger: '2.0'
info:
  description: A Social platform for the creative at heart
  version: 1.0.0
  title: Author's Haven
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
    name: Artemis
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: authorshaven.herokuapp.com
basePath: /api
tags:
  - name: user
    description: Everything associated to users
  - name: profile
    description: Every thing relating to the user profile
  - name: article
    description: Every thing relating to articles
schemes:
  - https
paths:
  /users:
    post:
      tags:
        - user
      summary: Creates a new user
      description: This endpoint signup a new user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User details
          required: true
          schema:
            type: object
            properties:
              firstname:
                type: string
              lastname:
                type: string
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: user created successfully
    get:
      tags:
        -user
      summary: Gets current user
      description: This endpont takes a token and returns corresponding user
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: user found
        '400':
          description: unauthorized
        '404'
          description: user not found
    put:
      tags:
        -user
      summary: Updates current user profile
      description: This endpont takes a token and updates corresponding user data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: bio
          in: body
          description: New user's biography
          required: false
          type: string
        - name: image
          in: body
          description: New image string
          required: true
          type: string
      responses:
        '200':
          description: user updated
        '400':
          description: unauthorized
        '404'
          description: user not found
  /users/verifyemail:
    get:
      tags:
        - user
      summary: Verify a new user's email
      description: This endpoint verifies a new user's email
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: email
          in: path
          description: New user's email address
          required: true
          type: string
        - name: hash
          in: path
          description: Encrypted data for comparism
          required: true
          type: string
      responses:
        '200':
          description: email verified successfully
        '400':
          description: invalid email
  /articles:
    post:
      tags:
        - article
      summary: Creates a new article
      description: Creates a new article
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: article
          description: Create an article
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              body:
                type: string
      responses:
        '200':
          description: Success
      security:
        - authorization: []
  /articles/tags:
    get:
      tags:
      - "article"
      summary: "Returns all tags"
      description: "Returns all the tags an article could have"
      produces:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: email
          in: path
          description: New user's email address
          required: true
          type: string
        - name: hash
          in: path
          description: Encrypted data for comparism
          required: true
          type: string
      responses:
        '200':
          description: email verified successfully
        '400':
          description: invalid email
  /articles:
    post:
      tags:
        - article
      summary: Creates a new article
      description: Creates a new article
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: article
          description: Create an article
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              body:
                type: string
      responses:
        '200':
          description: Success
      security:
        - authorization: []
  /profiles/{username}:
    tags:
        -user
      summary: Gets user profile
      description: This endpont returns given user data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          type: string
      responses:
        '200':
          description: user found
        '400':
          description: unauthorized
        '404'
          description: user not found
  /profiles/followers:
    get:
      tags:
      - "profile"
      summary: "fetch all authors following you"
      description: "This endpoint gets all your followers"
      produces:
      - "application/json"
      responses:
        200:
          description: "these are your followers"
      security:
        - authorization: []
  /profiles/following:
    get:
      tags:
      - "profile"
      summary: "fetch all authors you are following"
      description: "This endpoint gets all authors you are following"
      produces:
      - "application/json"
      responses:
        200:
          description: "people you are following"
      security:
        - authorization: []
  /profiles/{username}/follow:
    get:
      tags:
      - "profile"
      summary: "Follow an author by username"
      description: "Follows a single author"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "username of author to return"
        required: true
        type: "string"
      responses:
        201:
          description: "you just followed ${authors username}"
        403:
          description: "you cannot follow yourself"
        200:
          description: "you already following ${authors username}"
      security:
        - authorization: []
    delete:
      tags:
      - "profile"
      summary: "Unfollow an author by username"
      description: "Unfollows a single author"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: Success
          
  /profiles/followers:
    get:
      tags:
        - profile
      summary: fetch all authors following you
      description: This endpoint gets all your followers
      produces:
        - application/json
      responses:
        '200':
          description: these are your followers
      security:
        - authorization: []
  /profiles/following:
    get:
      tags:
        - profile
      summary: fetch all authors you are following
      description: This endpoint gets all authors you are following
      produces:
        - application/json
      responses:
        '200':
          description: people you are following
      security:
        - authorization: []
  /profiles/{username}/follow:
    get:
      tags:
        - profile
      summary: Follow an author by username
      description: Follows a single author
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: username of author to return
          required: true
          type: string
      responses:
        '200':
          description: 'you already following ${authors username}'
        '201':
          description: 'you just followed ${authors username}'
        '403':
          description: you cannot follow yourself
      security:
        - authorization: []
    delete:
      tags:
        - profile
      summary: Unfollow an author by username
      description: Unfollows a single author
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: username of author to return
          required: true
          type: string
      responses:
        '200':
          description: '${authors username} has been unfollowed'
        '403':
          description: you cannot unfollow yourself
        '404':
          description: user not found
      security:
        - authorization: []
  /users/auth/google:
    get:
      tags:
      - "users"
      summary: "Signs users in with google"
      description: "Redirects to google authentication page to seek their permission to share their information with the platform"
      produces:
      - "text/html"
      responses:
        403:
          description: "you cannot unfollow yourself"
        200:
          description: "user logged in successfully"
  /users/auth/facebook:
    get:
      tags:
      - "users"
      summary: "Signs users in with facebook"
      description: "Redirects to facebook authentication page to seek their permission to share their information with the platform"
      produces:
      - "text/html"
      responses:
        200:
          description: "user logged in successfully"
      - name: "username"
        in: "path"
        description: "username of author to return"
        required: true
        type: "string"
      responses:
        403:
          description: "you cannot unfollow yourself"
        200:
          description: "${authors username} has been unfollowed"
        404:
          description: "user not found"
      security:
        - authorization: []
          description: "Success"
  /users:
  post:
    tags:
    - "users"
    summary: "Signs up a new user"
    description: "Creates a user"
    consumes:
      - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "users"
      description: "Create a user"
      required: true
      schema:
        type: "object"
        properties:
          firstname:
            type: string
          lastname:
            type: string
          username:
            type: string
          email:
            type: string
          password:
            type: string
    responses:
      200:
        description: "user created successfully"

  /users/verifyemail:
  get:
    tags:
    - "users"
    summary: "Verifies a new user"
    description: "Verifies a new users email"
    consumes:
      - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
    responses:
      200:
        description: "email verified successfully"
      400:
        description: "invalid email"

  /users/auth/google:
  get:
    tags:
    - "users"
    summary: "Signs users in with google"
    description: "Redirects to google authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"

  /users/auth/facebook:
  get:
    tags:
    - "users"
    summary: "Signs users in with facebook"
    description: "Redirects to facebook authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"

  /users/auth/twitter:
  get:
    tags:
    - "users"
    summary: "Signs users in with twitter"
    description: "Redirects to twitter authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"
securityDefinitions:
  authorization:
    type: "apiKey"
    name: "authorization"
    in: "header"
