swagger: "2.0"
info:
  description: "A Social platform for the creative at heart"
  version: "1.0.0"
  title: "Author's Haven"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "authorshaven.herokuapp.com"
basePath: "/api"
tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "store"
  description: "Access to Petstore orders"
- name: "article"
  description: "Every thing relating to articles"
schemes:
- "https"
paths:
  /profiles/{username}:
    get:
      tags:
      - "pet"
      summary: "Returns a Profile"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"

  /articles:
    post:
      tags:
      - "article"
      summary: "Creates a new article"
      description: "Creates a new article"
      consumes:
        - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "article"
        description: "Create an article"
        required: true
        schema:
          type: "object"
          properties:
            title:
              type: string
            description:
              type: string
            body:
              type: string
      responses:
        200:
          description: "Success"

  /users:
  post:
    tags:
    - "users"
    summary: "Signs up a new user"
    description: "Creates a user"
    consumes:
      - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "users"
      description: "Create a user"
      required: true
      schema:
        type: "object"
        properties:
          firstname:
            type: string
          lastname:
            type: string
          username:
            type: string
          email:
            type: string
          password:
            type: string
    responses:
      200:
        description: "user created successfully"

  /users/verifyemail:
  get:
    tags:
    - "users"
    summary: "Verifies a new user"
    description: "Verifies a new users email"
    consumes:
      - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
    responses:
      200:
        description: "email verified successfully"
      400:
        description: "invalid email"

  /users/auth/google:
  get:
    tags:
    - "users"
    summary: "Signs users in with google"
    description: "Redirects to google authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"

  /users/auth/facebook:
  get:
    tags:
    - "users"
    summary: "Signs users in with facebook"
    description: "Redirects to facebook authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"

  /users/auth/twitter:
  get:
    tags:
    - "users"
    summary: "Signs users in with twitter"
    description: "Redirects to twitter authentication page to seek their permission to share their information with the platform"
    produces:
    - "text/html"
    responses:
      200:
        description: "user logged in successfully"
        
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
